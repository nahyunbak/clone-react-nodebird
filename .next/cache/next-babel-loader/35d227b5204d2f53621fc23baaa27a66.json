{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nahyu\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\\\uC7A1\\uB2E4\\uD55C \\uAC1C\\uBC1C\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\LoginForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, Form, Input } from 'antd';\nimport Link from 'next/link';\nimport { useCallback, useState } from 'react';\n\nconst LoginForm = () => {\n  const {\n    0: id,\n    1: setId\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState(''); // 추후 커스텀 훅으로 리팩토링 가능 \n  // 라이브러리 사용도 방법이다. \n\n  const onChangeId = useCallback(e => {\n    setId(e.target.value);\n  }, []);\n  const onChangePassword = useCallback(e => {\n    setPassword(e.target.value);\n  }, []);\n  return __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    onChange: onChangeId,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    onChange: onChangePassword,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    style: {\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlTyp: \"submit\",\n    loading: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n    href: \"/siginup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 38\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 41\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/nahyu/OneDrive/바탕 화면/잡다한 개발/react-nodebird/prepare/front/components/LoginForm.js"],"names":["Button","Form","Input","Link","useCallback","useState","LoginForm","id","setId","password","setPassword","onChangeId","e","target","value","onChangePassword","marginTop"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;;AAEA,MAAMC,SAAS,GAAE,MAAK;AAClB,QAAM;AAAA,OAACC,EAAD;AAAA,OAAKC;AAAL,MAAcH,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM;AAAA,OAACI,QAAD;AAAA,OAAWC;AAAX,MAA0BL,QAAQ,CAAC,EAAD,CAAxC,CAFkB,CAGlB;AACA;;AACA,QAAMM,UAAU,GAAGP,WAAW,CAAEQ,CAAD,IAAK;AAChCJ,IAAAA,KAAK,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAL;AACH,GAF6B,EAE3B,EAF2B,CAA9B;AAGA,QAAMC,gBAAgB,GAAGX,WAAW,CAAEQ,CAAD,IAAK;AACtCF,IAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAFmC,EAEjC,EAFiC,CAApC;AAGA,SACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAE,SAAb;AAAuB,IAAA,KAAK,EAAEP,EAA9B;AAAkC,IAAA,QAAQ,EAAEI,UAA5C;AAAwD,IAAA,QAAQ,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,KAAD;AACI,IAAA,IAAI,EAAE,eADV;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,KAAK,EAAEF,QAHX;AAII,IAAA,QAAQ,EAAEM,gBAJd;AAKI,IAAA,QAAQ,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CANJ,EAiBI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAC,QAA/B;AAAwC,IAAA,OAAO,EAAE,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADH,EAEG,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAH,CAAtB,CAFH,CAjBJ,CADJ;AAyBH,CApCD;;AAsCA,eAAeV,SAAf","sourcesContent":["import { Button, Form, Input } from 'antd';\r\nimport Link from 'next/link';\r\nimport { useCallback, useState } from 'react';\r\n\r\nconst LoginForm =() =>{\r\n    const [id, setId] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    // 추후 커스텀 훅으로 리팩토링 가능 \r\n    // 라이브러리 사용도 방법이다. \r\n    const onChangeId = useCallback((e)=>{\r\n        setId(e.target.value);\r\n    }, []);\r\n    const onChangePassword = useCallback((e)=>{\r\n        setPassword(e.target.value);\r\n    }, []);\r\n    return (\r\n        <Form>\r\n            <div>\r\n                <label htmlFor=\"user-id\">아이디</label>\r\n                <br />\r\n                <Input name =\"user-id\" value={id} onChange={onChangeId} required/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"user-password\">비밀번호</label>\r\n                <br />\r\n                <Input \r\n                    name =\"user-password\" \r\n                    type=\"password\" \r\n                    value={password}\r\n                    onChange={onChangePassword} \r\n                    required\r\n                />\r\n            </div>\r\n            <div style={{marginTop: '10px'}}>\r\n               <Button type=\"primary\" htmlTyp=\"submit\" loading={false}>로그인</Button>\r\n               <Link href=\"/siginup\"><a><Button>회원가입</Button></a></Link>\r\n            </div>\r\n            \r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}